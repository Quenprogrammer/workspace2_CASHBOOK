import{A as l,w as f,y as b}from"./chunk-R5SC75US.js";import{$ as d,F as c,V as n,ea as p,i as u,j as i,r as s}from"./chunk-QLK2YSBK.js";var m=class r{constructor(e){this.firestore=e;this.loadTotalDebits(),this.loadTotalCredits()}totalDebitSubject=new i([]);totalDebits$=this.totalDebitSubject.asObservable();totalCreditSubject=new i([]);totalCredits$=this.totalCreditSubject.asObservable();balanceSubject=new i(0);balance$=this.balanceSubject.asObservable();profitPercentageSubject=new i(0);profitPercentage$=this.profitPercentageSubject.asObservable();unsubscribe$=new u;loadTotalDebits(){let e=l(this.firestore,"totalDebit");b(e,{idField:"id"}).pipe(n(this.unsubscribe$),c(t=>(console.error("Error fetching totalDebits:",t),s([])))).subscribe(t=>{this.totalDebitSubject.next(t),this.calculateBalanceAndProfit()})}loadTotalCredits(){let e=l(this.firestore,"totalCredit");b(e,{idField:"id"}).pipe(n(this.unsubscribe$),c(t=>(console.error("Error fetching totalCredits:",t),s([])))).subscribe(t=>{this.totalCreditSubject.next(t),this.calculateBalanceAndProfit()})}calculateBalanceAndProfit(){let e=this.totalDebitSubject.getValue().reduce((o,a)=>o+(a.totalAmount||0),0),t=this.totalCreditSubject.getValue().reduce((o,a)=>o+(a.totalAmount||0),0),h=t-e;this.balanceSubject.next(h);let v=e>0?(t-e)/e*100:0;this.profitPercentageSubject.next(v)}ngOnDestroy(){this.unsubscribe$.next(),this.unsubscribe$.complete()}static \u0275fac=function(t){return new(t||r)(p(f))};static \u0275prov=d({token:r,factory:r.\u0275fac,providedIn:"root"})};export{m as a};
